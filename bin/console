#!/usr/bin/env php
<?php
/*
 * This file is part of the Goteo Package.
 *
 * (c) Platoniq y FundaciÃ³n Goteo <fundacion@goteo.org>
 *
 * For the full copyright and license information, please view the README.md
 * and LICENSE files that was distributed with this source code.
 */

// set to run indefinitely if needed
set_time_limit(0);

//Public Web path
define('GOTEO_WEB_PATH', dirname(__DIR__) . '/public/');

require_once __DIR__ . '/../src/autoload.php';

// import the Symfony Console Application
use Symfony\Component\Console\Application;
use Goteo\Application\App;
use Goteo\Application\Config;
use Goteo\Application\Lang;

// do not use cached files
App::debug(true);
// Config file...
Config::load();
App::debug(false);


$sc = App::getServiceContainer();

// Add a log level debug to stderr
$sc->register('logger.handler.debug', 'Monolog\Handler\StreamHandler')
    ->setArguments(array('php://stderr', Monolog\Logger::DEBUG))
;
$sc->getDefinition('logger')->addMethodCall('pushHandler', array(new Symfony\Component\DependencyInjection\Reference('logger.handler.debug')));


// Old constants compatibility generated by the dispatcher
define('HTTPS_ON', Config::get('ssl') ? true : false); // para las url de project/media
$url = Config::get('url.main');
define('SITE_URL', (Config::get('ssl') ? 'https://' : 'http://') . preg_replace('|^(https?:)?//|i','',$url));
define('SEC_URL', SITE_URL);

// Application Lang
Lang::setDefault(Config::get('lang'));
Lang::set(Config::get('lang'));

$app = new Application();

$app->add(new Goteo\Command\TranslationsCommand());
$app->add(new Goteo\Command\CacheCommand());
$app->add(new Goteo\Command\RoundExecuteCommand());

$app->run();

// Terminate events
$sc->get('app')->terminate();
